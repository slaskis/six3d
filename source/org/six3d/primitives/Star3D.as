package org.six3d.primitives {	import org.six3d.utils.Drawing;		import org.six3d.display.Sprite3D;		/**	 * @author Robert SkÃ¶ld, bob@six3d.org	 */	public class Star3D extends Sprite3D {				private static var _instance : int = 0;				private var _color : uint = 0x000000;		private var _outerRadius : Number;		private var _innerRadius : Number;		private var _edges : int;		private var _angle : Number;		public function Star3D( innerRadius : Number , outerRadius : Number , edges : int , angle : Number ) {			super( "star" + _instance++ );			_innerRadius = innerRadius;			_outerRadius = outerRadius;			_edges = edges;			_angle = angle;			draw();		}				public function set color( value : uint ) : void {			if( value > 0xFFFFFF ) value = 0xFFFFFF;			_color = value;			draw();		}		public function get color() : uint {			return _color;		}				public override function set alpha( value : Number ) : void {			super.alpha = value;			draw();		}				public function set innerRadius( value : Number ) : void {			_innerRadius = value;			draw();		}		public function get innerRadius() : Number {			return _innerRadius;		}		public function set outerRadius( value : Number ) : void {			_outerRadius = value;			draw();		}		public function get outerRadius() : Number {			return _outerRadius;		}		public function set edges( value : int ) : void {			_edges = value;			draw();		}		public function get edges() : int {			return _edges;		}		public function set angle( value : Number ) : void {			_angle = value;			draw();		}		public function get angle() : Number {			return _angle;		}						private function draw() : void {			Drawing.star( this , _edges , _innerRadius , _outerRadius , _angle , color , alpha );			askRendering( true );		}	}}