package org.six3d.examples.type {	import flash.display.Sprite;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.text.TextField;		import org.six3d.display.DisplayObject3D;	import org.six3d.display.InputText3D;	import org.six3d.display.Scene3D;	import org.six3d.display.Text3D;	import org.six3d.primitives.RoundedRectangle3D;	import org.six3d.typography.CompressedType;	import org.six3d.utils.FPSUtil;			/**	 * @private	 * @author Robert Sk√∂ld, bob@six3d.org	 */	public class InputExample extends Sprite {		private var _scene : Scene3D;		private var _txt : InputText3D;		private var _holder : DisplayObject3D;		private var _debug : TextField;		public function InputExample() {			stage.align = "TL";			stage.scaleMode = "noScale";									setupScene();			setupText();						new FPSUtil( this );		}		private function setupScene() : void {			var container : Sprite = new Sprite();			container.x = 250;			container.y = 200;			addChild( container );			_scene = new Scene3D( container );						// For debugging			_debug = new TextField( );			addChild( _debug );			_scene.addEventListener( "render" , onRender );		}				private function onRender( event : Event ) : void {			_debug.text = "Rendered: " + _scene.count;		}				private function setupText() : void {			_holder = new DisplayObject3D();			_scene.addChild( _holder );						_txt = new InputText3D();			_txt.typography = new CompressedType( "fonts/arial/arial.far" );			_txt.size = 2;			_txt.text = "Enter some text: ";			_txt.x = -200;			_txt.addEventListener( Event.CHANGE , onChange );						_holder.addChild( _txt );						var rect : RoundedRectangle3D = new RoundedRectangle3D( 100 , 100 , 20 );			_holder.addChild( rect );						stage.addEventListener( Event.ACTIVATE , onActive );			stage.addEventListener( Event.ENTER_FRAME , onMove );		}				private function onChange(event : Event) : void {			trace( "Changed text to: " + event.target.text );		}		private function onActive(event : Event) : void {			trace( "ACTIVE!" );			_txt.selected = true; // Must be called after addChild, like on a click event or something, because it needs to be added to stage first		}						private function onMove( event : Event ) : void {			_holder.rotationY += 5;//			_holder.rotationY = ( mouseX - 225 ) / 20;//			_holder.rotationX = -( mouseY - 200 ) / 20;		}	}}