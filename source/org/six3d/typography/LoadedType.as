package org.six3d.typography {	import flash.utils.Dictionary;	import flash.events.Event;	import flash.events.EventDispatcher;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.system.System;		import org.six3d.svg.Font;			/**	 * Parses an external SVG font into a Motif-array	 * @author Robert Sk√∂ld, bob@six3d.org	 * TODO Do the scaleY = -1 here instead of in Text3D, it just makes more sense here since it's only applicable on loaded svg types	 */	public class LoadedType extends EventDispatcher implements ILoadableType {				public static var CACHE : Boolean = true;		private static var _fonts : Dictionary = new Dictionary( true );		protected var _url : String;		protected var _memory : uint;		protected var _font : Font;		private var _initialized : Boolean = false;		public function LoadedType( url : String = null ) {			_url = url;			if( isCached() ) {				_font = _fonts[ _url ];				_initialized = true;			}		}				public function load( request : URLRequest = null ) : void {			if( !request && _url ) request = new URLRequest( _url );			_memory = System.totalMemory;			var loader : URLLoader = new URLLoader();			loader.addEventListener( Event.COMPLETE , onLoadComplete );			loader.load( request );		}				private function onLoadComplete( event : Event ) : void {			var svg : XML = new XML( event.target.data );			parseFont( svg );			trace( "Memory font loading took: " + ( System.totalMemory - _memory ) );			dispatchEvent( new Event( Event.COMPLETE ) );		}				public function isCached() : Boolean {			return CACHE && _fonts[ _url ] != null;		}				protected function parseFont( svg : XML ) : void {			_font = new Font( svg );			if( CACHE ) _fonts[ _url ] = _font;			_initialized = true;		}				public function getWidth( char : String , kern : String = null ) : Number {			var width : Number = 0;			if( _font.getGlyph( char ) != null ) {				width = _font.getGlyph( char ).width;			}			if( kern ) {				width -= _font.getKerning( char , kern );			}			return width || _font.width;		}				public function getHeight() : Number {			// TODO Make this from the SVG			return _font.height;		}				public function getMotif( char : String ) : Array {			return _font.getGlyph( char ).toMotifArray();		}
		
		public function initialized() : Boolean {			return _initialized;		}	}}