package org.six3d.primitives {	import org.six3d.utils.Drawing;		import org.six3d.display.Sprite3D;		/**	 * @author Robert SkÃ¶ld, bob@six3d.org	 */	public class RoundedRectangle3D extends Sprite3D {				private static var _instance : int = 0;				private var _radius : Number;		private var _width : Number;		private var _height : Number;		private var _color : uint = 0x000000;		private var _drawY : Number;		private var _drawX : Number;		public function RoundedRectangle3D( width : Number , height : Number , radius : Number , x : Number = 0 , y : Number = 0 ) {			super( "roundedrect" + _instance++ );			_width = width;			_height = height;			_radius = radius;			_drawX = x;			_drawY = y;			draw();		}		public function set color( value : uint ) : void {			if( value > 0xFFFFFF ) value = 0xFFFFFF;			_color = value;			draw();		}		public function get color() : uint {			return _color;		}				public override function set alpha( value : Number ) : void {			super.alpha = value;			draw();		}				public function set width( value : Number ) : void {			_width = value;			draw();		}		public function get width() : Number {			return _width;		}		public function set height( value : Number ) : void {			_height = value;			draw();		}		public function get height() : Number {			return _height;		}		public function set radius( value : Number ) : void {			_radius = value;			draw();		}		public function get radius() : Number {			return _radius;		}		private function draw() : void {			Drawing.roundedPlace( this , _drawX , _drawY , _width , _height, _radius, color , alpha );			askRendering( true );		}	}}