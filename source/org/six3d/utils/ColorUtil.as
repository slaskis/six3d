package org.six3d.utils {	import flash.display.DisplayObject;	import flash.display.GradientType;	import flash.display.Sprite;	import flash.geom.ColorTransform;	import flash.geom.Matrix;		/**	 * @author Robert Sk√∂ld	 */	public class ColorUtil {		public static function colorize( targ : DisplayObject , color : uint ) : void {			if( !color ) return;			var col : ColorTransform = targ.transform.colorTransform;			col.color = color;			targ.transform.colorTransform = col;		}		public static function brightness( targ : DisplayObject , value : Number ) : void {			var filters : Array = targ.filters;			// NOTE Commented out until needed, adds unnecessary size			//filters.push( new ColorMatrixFilter([brightness,0,0,0,0,0,brightness,0,0,0,0,0,brightness,0,0,0,0,0,1,0]) );			targ.filters = filters;		}		public static function contrast( targ : DisplayObject , value : Number ) : void {			var filters : Array = targ.filters;			var a : Number = value * 11;			var b : Number = 63.5 - ( value * 698.5 );			// NOTE Commented out until needed, adds unnecessary size			//filters.push( new ColorMatrixFilter([a,0,0,0,b,0,a,0,0,0,b,0,a,0,0,0,b,0,1,0]) );			targ.filters = filters;		}				public static function linearGradient( targ : Sprite , left : uint , right : uint ) : Sprite {			var colors : Array = [ left , right ];			var alphas : Array = [ 100 , 100 ];			var ratios : Array = [ 0 , 255 ];			var matrix : Matrix = new Matrix();			matrix.createGradientBox( targ.width , targ.height , 0 , targ.x , targ.y );			var grad : Sprite = new Sprite();			grad.graphics.beginGradientFill( GradientType.LINEAR , colors , alphas , ratios , matrix );			grad.graphics.drawRect( targ.x , targ.y, targ.width, targ.height);			grad.graphics.endFill();			grad.mask = targ;			return grad;		}	}}