package org.six3d.utils {	import flash.display.Sprite;	import flash.events.Event;	import flash.events.KeyboardEvent;	import flash.events.TimerEvent;	import flash.system.System;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;	import flash.text.TextFormat;	import flash.utils.Timer;		/**	 * @author Robert Skï¿½ld, bob@six3d.org	 */	public class FPSUtil {				private static const MAX_AVARAGES : int = 100;						private var _tf : TextField;		private var _frames : Number = 0;		private var _averages : Array = new Array();		private var _target : Sprite;		private var _timer : Timer;		public function FPSUtil( target : Sprite ) {			_target = target;						var format : TextFormat = new TextFormat();			format.font = "Verdana";			format.color = 0x000000;			format.size = 12;			format.underline = true;						_tf = new TextField();			_tf.autoSize = TextFieldAutoSize.LEFT;			_tf.defaultTextFormat = format;						_timer = new Timer( 1000 );			_timer.addEventListener( TimerEvent.TIMER , ticker , false , 0 , true );			_target.stage.addEventListener( KeyboardEvent.KEY_DOWN , onKeyDown );		}				private function onKeyDown( event : KeyboardEvent ) : void {			if( String.fromCharCode( event.charCode ) == "F" ) {				if( _target.contains( _tf ) ) {					_target.removeEventListener( Event.ENTER_FRAME , everyFrame );					_target.removeChild( _tf );					_timer.stop();				} else {					_target.addEventListener( Event.ENTER_FRAME , everyFrame , false , 0 , true );					_timer.start();					_target.addChild( _tf );				}							}		}		private function ticker( event : TimerEvent ) : void {			var avg : int = 0;			var max : int = 0;			var min : int = 30;			_tf.text = _frames + " fps";			_averages.push( _frames );			if( _averages.length > MAX_AVARAGES ) _averages.shift();			var l : int = _averages.length;			while( --l ) {				avg += _averages[l];				if( _averages[l] > max ) max = _averages[l];				if( _averages[l] < min ) min = _averages[l];			}			_tf.appendText( " [" + int( avg / _averages.length ) + " avg, "+ min +" min, " + max + " max], mem: " + System.totalMemory );			_frames = 0;		}		private function everyFrame( event : Event ) : void {			_frames++;		}			}}