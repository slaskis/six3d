package org.six3d.primitives {	import org.six3d.utils.Drawing;		import org.six3d.display.Sprite3D;		/**	 * @author Robert SkÃ¶ld, bob@six3d.org	 */	public class Circle3D extends Sprite3D {				private static var _instance : int = 0;				private var _radius : Number;		private var _color : uint = 0x000000;		public function Circle3D( radius : Number ) {			super( "circle" + _instance++ );			_radius = radius;			draw();		}				public function set color( value : uint ) : void {			if( value > 0xFFFFFF ) value = 0xFFFFFF;			_color = value;			draw();		}		public function get color() : uint {			return _color;		}				public override function set alpha( value : Number ) : void {			super.alpha = value;			draw();		}				public function set radius( value : int ) : void {			_radius = value;			draw();		}		public function get radius() : int {			return _radius;		}						private function draw() : void {			Drawing.disk( this , _radius , color , alpha );			askRendering( true );		}	}}