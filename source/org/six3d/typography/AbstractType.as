package org.six3d.typography {	import flash.utils.Dictionary;			/**	 * @author Robert Sk√∂ld, bob@six3d.org	 */	public class AbstractType implements IType {		protected var _motifs : Dictionary;		protected var _widths : Dictionary;		protected var _height : Number;		private var _initialized : Boolean = false;				public function AbstractType() {			_motifs = new Dictionary( true );			_widths = new Dictionary( true );			initialize();		}				private function initialize() : void {			if( initialized() ) return; 			initializeMotifsUppercase();			initializeMotifsLowercase();			initializeMotifsNumbers();			initializeMotifsPunctuation();			initializeWidthsUppercase();			initializeWidthsLowercase();			initializeWidthsNumbers();			initializeWidthsPunctuation();			_initialized = true;		}						public function initialized() : Boolean {			return _initialized;		}		public function getWidth( char : String , kern : String = null ) : Number {			return _widths[ char ];		}				public function getHeight() : Number {			return _height;		}				public function getMotif( char : String ) : Array {			return _motifs[ char ] || [];		}				// Abstract methods		protected function initializeWidthsPunctuation() : void {}		protected function initializeWidthsNumbers() : void {}		protected function initializeWidthsLowercase() : void {}		protected function initializeWidthsUppercase() : void {}		protected function initializeMotifsPunctuation() : void {}		protected function initializeMotifsNumbers() : void {}		protected function initializeMotifsLowercase() : void {}		protected function initializeMotifsUppercase() : void {		}			}}