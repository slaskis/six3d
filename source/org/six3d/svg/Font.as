package org.six3d.svg {	import flash.utils.Dictionary;				/**	 * Parsed out the font from an svg	 * @author Robert Sk√∂ld, bob@six3d.org	 */	public class Font {				public static var SHOW_MISSING : Boolean = true;		private var _attributes : Dictionary;		private var _kerning : Dictionary;		private var _glyphs : Dictionary;		private var _missing : Glyph;		private var _ns : Namespace;		public function Font( svg : XML ) {			_ns = svg.namespace();			svg = svg._ns::defs._ns::font[0];			parseAttributes( svg );			parseGlyphs( svg );			parseKerning( svg );		}				private function parseGlyphs( svg : XML ) : void {			_glyphs = new Dictionary( true );			for each( var glyph : XML in svg.child( new QName( _ns , "glyph" ) ) ) {				var font : Glyph = new Glyph( glyph );				_glyphs[ font.unicode ] = font;			}			_missing = new Glyph( svg.child( new QName( _ns , "missing-glyph" ) )[0] );		}				private function parseKerning( svg : XML ) : void {			_kerning = new Dictionary( true );			for each( var kern : XML in svg.child( "hkern" ) ) {				if( !_kerning[ String( kern.@g1 ) ] ) _kerning[ String( kern.@g1 ) ] = new Dictionary( true );				_kerning[ String( kern.@g1 ) ][ String( kern.@g2 ) ] = parseInt( kern.@k );				trace( "added kerning: " + String( kern.@g1 ) , String( kern.@g2 ) );			}		}		private function parseAttributes( svg : XML ) : void {			_attributes = new Dictionary( true );			_attributes[ "width" ] = parseInt( svg.attribute( new QName( _ns , "horiz-adv-x" ) ) );			for each( var attribute : XML in svg.child( new QName( _ns , "font-face" ) )[0].attributes() ) {				_attributes[ String( attribute.name() ) ] = attribute.toString();			}		}		public function getGlyph( char : String ) : Glyph {			if( char == "\n" ) return new Glyph();			if( SHOW_MISSING && !_glyphs[ char ] ) return _missing;			return _glyphs[ char ];		}				public function getKerning( char : String , kern : String ) : int {			if( hasKerning( char , kern ) ) return _kerning[ char ][ kern ];			return 0;		}				public function hasKerning( char : String , kern : String ) : Boolean {			return _kerning[ char ] != null && _kerning[ char ][ kern ] != null;		}		public function get width() : Number {			return _attributes[ "width" ];		}				public function get height() : Number {			return _attributes[ "units-per-em" ];		}	}}import org.six3d.svg.PathData;class Glyph {	private var _unicode : String = "";	private var _name : String = "";	private var _width : int = 0;	private var _path : PathData;	public function Glyph( node : XML = null ) {//		trace( "Glyph: " + node.toXMLString() );		if( node ) {			_unicode = String( node.@unicode );			_name = String( node.@["glyph-name"] );			_width = parseInt( node.@["horiz-adv-x"] );			_path = new PathData( String( node.@d ) );		} else {			_path = null;		}	}		public function get unicode() : String {		return _unicode;	}		public function get name() : String {		return _name;	}		public function get width() : int {		return _width;	}		public function get path() : PathData {		return _path;	}		public function toMotifArray() : Array {		if( !path ) return [];		return path.getMotifArray();	}}